{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/repo-wallet/Trybe-Wallet/Trybe-wallet/src/components/TableInfo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { sumExpense } from '../actions/index';\nimport bitcoin from '../imgs/Bitcoin.png';\nimport dolar from '../imgs/dolar.png';\nimport euro from '../imgs/euro.png';\nimport dolarCanadense from '../imgs/dolar-canadense.png';\n\nclass TableInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleted: false,\n      edit: false\n    };\n    this.deleteExpense = this.deleteExpense.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      requestCurrence\n    } = this.props;\n    requestCurrence();\n  }\n\n  deleteExpense(index) {\n    const {\n      expenses,\n      sigleCurrence,\n      sumExpenses\n    } = this.props;\n    expenses.splice(index, 1);\n    this.setState({\n      deleted: true\n    });\n    const filterCurrence = Object.values(sigleCurrence).filter(item => item.name !== 'DÃ³lar Turismo');\n    const sum = expenses.map(item => {\n      return parseFloat(filterCurrence.find(currence => currence.code === item.currency).ask) * parseFloat(item.value);\n    }).reduce((acc, reduce) => acc + reduce, 0);\n    sumExpenses(sum);\n    return sum;\n  }\n\n  selectedImgCurrency(coin) {\n    if (coin === 'USD') {\n      return dolar;\n    } else if (coin === 'EUR') {\n      return euro;\n    } else if (coin === 'BTC') {\n      return bitcoin;\n    } else if (coin === 'CAD') {\n      return dolarCanadense;\n    } else {\n      return '';\n    }\n  }\n\n  render() {\n    const {\n      expenses\n    } = this.props;\n    const moedas = ['USD', 'EUR', 'BTC', 'CAD'];\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Excluir\"))), expenses.map((item, index) => {\n      const {\n        currency,\n        exchangeRates\n      } = item;\n      const convert = (exchangeRates[currency].ask * item.value).toLocaleString('pt-br', {\n        style: 'currency',\n        currency: 'BRL'\n      });\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"item-table is-edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, item.tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, item.method), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, item.value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, moedas.includes(currency) ? /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-coin\",\n        alt: \"moeda\",\n        src: this.selectedImgCurrency(exchangeRates[currency].code),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 66\n        }\n      }) : '', \" \", exchangeRates[currency].name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, Number(exchangeRates[currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }\n      }, convert), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"delete- button is-danger\",\n        type: \"button\",\n        onClick: () => this.deleteExpense(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, \"X\"))));\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses,\n  sigleCurrence: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  sumExpenses: sum => dispatch(sumExpense(sum))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableInfo);","map":{"version":3,"sources":["/home/guilherme/repo-wallet/Trybe-Wallet/Trybe-wallet/src/components/TableInfo.js"],"names":["React","connect","sumExpense","bitcoin","dolar","euro","dolarCanadense","TableInfo","Component","constructor","props","state","deleted","edit","deleteExpense","bind","componentDidMount","requestCurrence","index","expenses","sigleCurrence","sumExpenses","splice","setState","filterCurrence","Object","values","filter","item","name","sum","map","parseFloat","find","currence","code","currency","ask","value","reduce","acc","selectedImgCurrency","coin","render","moedas","exchangeRates","convert","toLocaleString","style","description","tag","method","includes","Number","toFixed","mapStateToProps","wallet","currencies","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { sumExpense } from '../actions/index'\nimport bitcoin from '../imgs/Bitcoin.png';\nimport dolar from '../imgs/dolar.png';\nimport euro from '../imgs/euro.png';\nimport dolarCanadense from '../imgs/dolar-canadense.png';\n\n\nclass TableInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleted: false,\n            edit:false\n        }\n\n        this.deleteExpense = this.deleteExpense.bind(this);\n        \n       \n    }\n\n    componentDidMount() {\n        const { requestCurrence } = this.props;\n        requestCurrence()\n    }\n\n\n    deleteExpense(index) {\n        const { expenses, sigleCurrence, sumExpenses } = this.props\n        expenses.splice(index, 1)\n        this.setState({\n            deleted: true\n        })\n        const filterCurrence = Object.values(sigleCurrence).filter((item) => item.name !== 'DÃ³lar Turismo')\n        const sum = expenses.map((item) => {\n            return parseFloat(filterCurrence.find((currence) => currence.code === item.currency).ask) * parseFloat(item.value)\n        }).reduce((acc, reduce) => acc + reduce, 0)\n        sumExpenses(sum)\n        return sum\n\n    }\n\n   \n\n    selectedImgCurrency(coin) {\n        if (coin === 'USD') {\n            return dolar\n        } else if (coin === 'EUR') {\n            return euro\n        } else if (coin === 'BTC') {\n            return bitcoin\n        } else if (coin === 'CAD') {\n            return dolarCanadense\n        } else {\n            return ''\n        }\n    }\n\n    \n\n\n    render() {\n        const { expenses } = this.props\n        const moedas = ['USD' , 'EUR' , 'BTC' , 'CAD']\n        \n        return (\n\n            <table className=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\" >\n                <thead>\n                    <tr>\n                        <td>DescriÃ§Ã£o</td>\n                        <td>Tag</td>\n                        <td>MÃ©todo de pagamento</td>\n                        <td>Valor</td>\n                        <td>Moeda</td>\n                        <td>CÃ¢mbio utilizado</td>\n                        <td>Valor convertido</td>\n                        <td>Moeda de conversÃ£o</td>\n                        <td>Excluir</td>\n                    </tr>\n                </thead>\n                {expenses.map((item, index) => {\n                    const { currency, exchangeRates } = item\n                    const convert = (exchangeRates[currency].ask * item.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\n                    return (\n                        <tbody  key={index} >\n                            <tr className='item-table is-edit'  >\n                                <td>{item.description}</td>\n                                <td>{item.tag}</td>\n                                <td>{item.method}</td>\n                                <td>{item.value}</td>\n                                <td>{moedas.includes(currency) ? <img className=\"img-coin\" alt=\"moeda\" src={this.selectedImgCurrency(exchangeRates[currency].code)} /> : ''} {exchangeRates[currency].name}</td>\n                                <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n                                <td>{convert}</td>\n                                <td>Real</td>\n                                <td>\n                                   \n                                    <button className=\"delete- button is-danger\" type=\"button\" onClick={() => this.deleteExpense(index)} >X</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    )\n                })}\n\n\n            </table>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    expenses: state.wallet.expenses,\n    sigleCurrence: state.wallet.currencies,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    sumExpenses: sum => dispatch(sumExpense(sum)),\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableInfo);"]},"metadata":{},"sourceType":"module"}