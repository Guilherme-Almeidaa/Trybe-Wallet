{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/repo-wallet/Trybe-Wallet/Trybe-wallet/src/components/InputEmail.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { emailSave } from '../actions/index';\n\nclass InputEmail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: ''\n    };\n  }\n\n  changeEmail({\n    target\n  }) {\n    const {\n      saveEmail\n    } = this.props;\n    const {\n      value\n    } = target;\n    this.setState({\n      email: value\n    }, () => saveEmail(value));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control is-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input is-primary is-small\",\n      placeholder: \"Email\",\n      onChange: target => this.changeEmail(target),\n      \"data-testid\": \"email-input\",\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  saveEmail: email => dispatch(emailSave(email))\n});\n\nexport default connect(null, mapDispatchToProps)(InputEmail);","map":{"version":3,"sources":["/home/guilherme/repo-wallet/Trybe-Wallet/Trybe-wallet/src/components/InputEmail.js"],"names":["React","connect","emailSave","InputEmail","Component","constructor","props","state","email","changeEmail","target","saveEmail","value","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,WAAW,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAa;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKL,KAA3B;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAYF,MAAlB;AACA,SAAKG,QAAL,CAAc;AACVL,MAAAA,KAAK,EAAEI;AADG,KAAd,EAEG,MAAMD,SAAS,CAACC,KAAD,CAFlB;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,2BAAjB;AAA6C,MAAA,WAAW,EAAC,OAAzD;AAAiE,MAAA,QAAQ,EAAGJ,MAAD,IAAY,KAAKD,WAAL,CAAiBC,MAAjB,CAAvF;AAAiH,qBAAY,aAA7H;AAA2I,MAAA,IAAI,EAAC,OAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH;;AAzBoC;;AA4BzC,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACtCL,EAAAA,SAAS,EAAEH,KAAK,IAAIQ,QAAQ,CAACd,SAAS,CAACM,KAAD,CAAV;AADU,CAAf,CAA3B;;AAIA,eAAeP,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCZ,UAAlC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { emailSave } from '../actions/index'\n\nclass InputEmail extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n        }\n    }\n\n    changeEmail({ target }) {\n        const { saveEmail } = this.props\n        const { value } = target\n        this.setState({\n            email: value\n        }, () => saveEmail(value))\n    }\n\n    render() {\n        return (\n            <div className=\"field\" >\n                <label className=\"label\" >Email</label>\n                <div className=\"control is-small\" >\n                    <input className=\"input is-primary is-small\" placeholder=\"Email\" onChange={(target) => this.changeEmail(target)} data-testid=\"email-input\" type=\"email\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    saveEmail: email => dispatch(emailSave(email))\n})\n\nexport default connect(null, mapDispatchToProps)(InputEmail);"]},"metadata":{},"sourceType":"module"}